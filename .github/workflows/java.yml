name: Java CI CD

on:
  push:
    branches: [main, dev]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
  
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: checkout the code
        uses: actions/checkout@v3

      - name: Set up Java version
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
       # Sonarcloud   
#       - name: Cache SonarCloud packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
          
#       - name: Cache Maven packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
          
#       - name: Build and analyze  
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Tibil-vishwAAs_Vishwaas
#         working-directory: ./PortalBackend/Demo

      - name: Build with Maven # also packages the application
        run: mvn -B package -DskipTests --file pom.xml
        working-directory: ./PortalBackend/Demo

      - name: Run Tests with Maven # also packages the application
        run: mvn -B test -Dspring.profiles.active=test --file pom.xml
        working-directory: ./PortalBackend/Demo

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: PortalBackend/Demo

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: login to docker registry
        uses: azure/docker-login@v1
        with:
          login-server: vishwassregistry.azurecr.io
          username: ${{ secrets.AZURE_CLIENT_ID }}
          password: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Build and push Docker image
        run: |
          docker pull krishnarj/demo:latest
          docker image tag krishnarj/demo:latest  vishwassregistry.azurecr.io/java_test:v1
          docker push vishwassregistry.azurecr.io/java_test:v1
        working-directory: ./PortalBackend/Demo

      - name: Set the context for AKS
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: vishwaas-rg
          cluster-name: vishwaas-cluster

      - name: Authentication for AKS
        uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: vishwassregistry.azurecr.io
          container-registry-username: ${{ secrets.AZURE_CLIENT_ID }}
          container-registry-password: ${{ secrets.AZURE_CLIENT_SECRET }}
          secret-name: vishwassregistry-k8s-secret

      - name: Apply Kubernetes manifests
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: |
            Kubernetes/deployment.yaml
            Kubernetes/service.yaml
          images: |
            vishwassregistry.azurecr.io/java_test:v1
          imagepullsecrets: |
            vishwassregistry-k8s-secret
            

